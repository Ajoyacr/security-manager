#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PACKAGE_VERSION ?= $(shell dpkg-parsechangelog | sed -n 's/^Version: // p')

PREFIX ?= /usr
DATADIR ?= /opt

CFLAGS ?= -Wall -g
CXXFLAGS ?=  -Wall -g
LDFLAGS += -Wl,--rpath=$(PREFIX)/lib -Wl,--as-needed

CMAKE_BUILD_DIR ?= $(CURDIR)/cmake_build_tmp

ifeq (,$(findstring no,$(DPL_LOGS)))
	DPL_LOGS_STATUS = "ON"
else
	DPL_LOGS_STATUS = "OFF"
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
	CXXFLAGS += -O0
else
	CFLAGS += -O2
	CXXFLAGS += -O2
endif


config.status:
	dh_testdir
	# Add here commands to configure the package.
	mkdir -p $(CMAKE_BUILD_DIR) && cd $(CMAKE_BUILD_DIR) && \
	cmake ${SRCDIR} \
		-DCMAKE_INSTALL_PREFIX="${PREFIX}"      \
		-DDPL_LOG=$(DPL_LOGS_STATUS)            \
		-DVERSION=${PACKAGE_VERSION} ..

build: build-stamp

build-stamp:  config.status
	dh_testdir
	# Add here commands to compile the package.
	cd $(CMAKE_BUILD_DIR) && $(MAKE)
#### -j 4
	#docbook-to-man debian/ncurses.sgml > ncurses.1
	for f in `find $(CURDIR)/ -name "*.in"`; do \
		cat $$f > $${f%.in}; \
		sed -i -e "s#@PREFIX@#$(PREFIX)#g" $${f%.in}; \
		sed -i -e "s#@DATADIR@#$(DATADIR)#g" $${f%.in}; \
	done
	touch $@


clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Add here commands to clean up after the build process.
	-find . -name CMakeFiles -exec rm -rf {} \;
	-find . -name cmake_install.cmake -exec rm {} \;
	#-find . -name Makefile -exec rm {} \;
	rm CMakeCache.txt -rf
	#-$(MAKE) distclean
	rm -rf $(CMAKE_BUILD_DIR)
	rm -rf autotools
	rm -rf aclocal.m4
	rm -rf configure
	rm -rf Makefile
	rm -rf Makefile.in
	rm -rf m4
	rm -rf libtool
	rm -rf build/config.*
	rm -rf build/depcomp
	rm -rf build/install-sh
	rm -rf build/ltmain.sh
	rm -rf build/missing
	rm -rf install_manifest.txt
	rm -rf *.so
	rm -rf *.pc
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif
	for f in `find $(CURDIR)/debian/ -name "*.in"`; do \
		rm -f $${f%.in}; \
	done
	rm -rf config.*
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	cd $(CMAKE_BUILD_DIR) && $(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

	mkdir -p $(CURDIR)/debian/tmp/etc/rc.d/rc3.d/
	mkdir -p $(CURDIR)/debian/tmp/etc/rc.d/rc5.d/
	ln -s ../init.d/security-serverd $(CURDIR)/debian/tmp/etc/rc.d/rc3.d/S10security-server
	ln -s ../init.d/security-serverd $(CURDIR)/debian/tmp/etc/rc.d/rc5.d/S10security-server


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
	dh_install --sourcedir=debian/tmp
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
#	dh_strip
	dh_strip --dbg-package=security-server-dbg
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
